plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation "org.springframework.boot:spring-boot-starter-validation:$validationVersion"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$springdocVersion"

	implementation 'org.modelmapper:modelmapper:3.1.1'

	implementation 'org.springframework.kafka:spring-kafka'

	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.2'

	implementation "org.postgresql:postgresql:$postgreSqlVersion"

	implementation 'org.flywaydb:flyway-core'
//    implementation "org.flywaydb:flyway-core:$flywayDbVersion"
	implementation "com.google.code.findbugs:jsr305:$googleFindBugsVersion"

	implementation "org.mapstruct:mapstruct:$mapStructVersion"

	implementation "org.projectlombok:lombok:$lombokVersion"

	compileOnly('org.projectlombok:lombok')
	annotationProcessor "org.projectlombok:lombok"
	annotationProcessor "org.mapstruct:mapstruct-processor:$mapStructVersion"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
